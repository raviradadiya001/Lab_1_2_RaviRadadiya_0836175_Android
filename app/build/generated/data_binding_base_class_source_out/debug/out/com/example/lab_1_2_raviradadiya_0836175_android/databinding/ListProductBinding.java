// Generated by view binder compiler. Do not edit!
package com.example.lab_1_2_raviradadiya_0836175_android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.lab_1_2_raviradadiya_0836175_android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnUpdate;

  @NonNull
  public final TextView rowDescr;

  @NonNull
  public final TextView rowName;

  @NonNull
  public final TextView rowPrice;

  private ListProductBinding(@NonNull LinearLayout rootView, @NonNull Button btnDelete,
      @NonNull Button btnUpdate, @NonNull TextView rowDescr, @NonNull TextView rowName,
      @NonNull TextView rowPrice) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnUpdate = btnUpdate;
    this.rowDescr = rowDescr;
    this.rowName = rowName;
    this.rowPrice = rowPrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.list_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_delete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btn_update;
      Button btnUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnUpdate == null) {
        break missingId;
      }

      id = R.id.row_descr;
      TextView rowDescr = ViewBindings.findChildViewById(rootView, id);
      if (rowDescr == null) {
        break missingId;
      }

      id = R.id.row_name;
      TextView rowName = ViewBindings.findChildViewById(rootView, id);
      if (rowName == null) {
        break missingId;
      }

      id = R.id.row_price;
      TextView rowPrice = ViewBindings.findChildViewById(rootView, id);
      if (rowPrice == null) {
        break missingId;
      }

      return new ListProductBinding((LinearLayout) rootView, btnDelete, btnUpdate, rowDescr,
          rowName, rowPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
